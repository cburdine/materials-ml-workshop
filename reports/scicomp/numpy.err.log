Traceback (most recent call last):
  File "/media/colin/Shared/colin/git/materials-ml-workshop/env/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/media/colin/Shared/colin/git/materials-ml-workshop/env/lib/python3.10/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/media/colin/Shared/colin/git/materials-ml-workshop/env/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
  File "/usr/lib/python3.10/asyncio/base_events.py", line 646, in run_until_complete
    return future.result()
  File "/media/colin/Shared/colin/git/materials-ml-workshop/env/lib/python3.10/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/media/colin/Shared/colin/git/materials-ml-workshop/env/lib/python3.10/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/media/colin/Shared/colin/git/materials-ml-workshop/env/lib/python3.10/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
#------------------------------------
# Part one:
#------------------------------------

# given matrix A:
A = np.array([ [1,1], [0,1] ])

# diagonalize A:
lambda_diag, P = np.linalg.eig(A)
Lambda = np.diag(lambda_diag)

# print P:
print('P:')
print(P)

# print Î›:
print('Î›:')
print(Lambda)

# convert the eigenvalues into a diagonal matrix:
Lambda = np.diag(lambda_diag)

print('P Î› P^(-1):')
print(P @ Lambda @ np.linalg.inv(P))


#------------------------------------
# Part Two:
#------------------------------------
print('----------------------------')

# given matrix X:
X = np.array([
    [ 0, 1, 0 ]
    [ 1, 0, 1 ]
    [ 0, 1, 0 ]
])

# diagonalize X using eigh (for Hermitian matrices):
lambda_diag, P = np.linalg.eigh(A)
Lambda = np.diag(lambda_diag)

# print P:
print('P:')
print(P)

# print Î›:
print('Î›:')
print(Lambda)

# convert the eigenvalues into a diagonal matrix:
Lambda = np.diag(lambda_diag)

print('P Î› P^(-1):')
print(P @ Lambda @ np.linalg.inv(P))
------------------

----- stdout -----
P:
[[ 1.00000000e+00 -1.00000000e+00]
 [ 0.00000000e+00  2.22044605e-16]]
Î›:
[[1. 0.]
 [0. 1.]]
P Î› P^(-1):
[[1. 0.]
 [0. 1.]]
----------------------------
----- stderr -----
<>:34: SyntaxWarning: list indices must be integers or slices, not tuple; perhaps you missed a comma?
<>:34: SyntaxWarning: list indices must be integers or slices, not tuple; perhaps you missed a comma?
/tmp/ipykernel_100063/2519945006.py:34: SyntaxWarning: list indices must be integers or slices, not tuple; perhaps you missed a comma?
  [ 0, 1, 0 ]
----- stderr -----
/tmp/ipykernel_100063/2519945006.py:34: SyntaxWarning: list indices must be integers or slices, not tuple; perhaps you missed a comma?
  [ 0, 1, 0 ]
/tmp/ipykernel_100063/2519945006.py:34: SyntaxWarning: list indices must be integers or slices, not tuple; perhaps you missed a comma?
  [ 0, 1, 0 ]
/tmp/ipykernel_100063/2519945006.py:34: SyntaxWarning: list indices must be integers or slices, not tuple; perhaps you missed a comma?
  [ 0, 1, 0 ]
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mTypeError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[12], line 34[0m
[1;32m     30[0m [38;5;28mprint[39m([38;5;124m'[39m[38;5;124m----------------------------[39m[38;5;124m'[39m)
[1;32m     32[0m [38;5;66;03m# given matrix X:[39;00m
[1;32m     33[0m X [38;5;241m=[39m np[38;5;241m.[39marray([
[0;32m---> 34[0m     [43m[[49m[43m [49m[38;5;241;43m0[39;49m[43m,[49m[43m [49m[38;5;241;43m1[39;49m[43m,[49m[43m [49m[38;5;241;43m0[39;49m[43m [49m[43m][49m
[1;32m     35[0m [43m    [49m[43m[[49m[43m [49m[38;5;241;43m1[39;49m[43m,[49m[43m [49m[38;5;241;43m0[39;49m[43m,[49m[43m [49m[38;5;241;43m1[39;49m[43m [49m[43m][49m
[1;32m     36[0m     [ [38;5;241m0[39m, [38;5;241m1[39m, [38;5;241m0[39m ]
[1;32m     37[0m ])
[1;32m     39[0m [38;5;66;03m# diagonalize X using eigh (for Hermitian matrices):[39;00m
[1;32m     40[0m lambda_diag, P [38;5;241m=[39m np[38;5;241m.[39mlinalg[38;5;241m.[39meigh(A)

[0;31mTypeError[0m: list indices must be integers or slices, not tuple

