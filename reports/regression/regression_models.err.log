Traceback (most recent call last):
  File "/media/colin/Shared/colin/git/materials-ml-workshop/env/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/media/colin/Shared/colin/git/materials-ml-workshop/env/lib/python3.10/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/media/colin/Shared/colin/git/materials-ml-workshop/env/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
  File "/usr/lib/python3.10/asyncio/base_events.py", line 646, in run_until_complete
    return future.result()
  File "/media/colin/Shared/colin/git/materials-ml-workshop/env/lib/python3.10/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/media/colin/Shared/colin/git/materials-ml-workshop/env/lib/python3.10/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/media/colin/Shared/colin/git/materials-ml-workshop/env/lib/python3.10/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import numpy as np
from sklearn.linear_model import RidgeClassifier
from sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay
import matplotlib.pyplot as plt

# get direct bandgap data for materials with nonzero gaps:
direct_gap_x = data_x[data_y[:,0] > 0]
direct_gap_y = data_y[(data_y[:,0] > 0),1]

# split data in train/test/validation sets:
direct_subsets_x, direct_subsets_y = \
    train_val_test_split(direct_gap_x, direct_gap_y)
train_x, val_x, test_x = direct_subsets_x
train_y, val_y, test_y = direct_subsets_y

# normalize data:
scaler, train_z, val_z, test_z = \
    normalize(train_x, val_x, test_x)

# fit a ridge classifier to the data:
direct_ridge_model = RidgeClassifier(alpha=20)
direct_ridge_model.fit(train_z, train_y)

# make predictions on the validation & test sets:
val_yhat = direct_ridge_model.predict(val_z)
test_yhat = direct_ridge_model.predict(test_z)

print(set(direct_gap_y))

# compute accuracy:
cm = confusion_matrix(val_y, val_yhat)
accuracy = np.sum(np.diag(cm)) / np.sum(cm)

# display validation set confusion matrix:
disp = ConfusionMatrixDisplay(confusion_matrix=cm,
                              display_labels=model.classes_)
disp.plot()
plt.gca().set_yticklabels(['Direct', 'Indirect'])
plt.gca().set_xticklabels(['Direct', 'Indirect'])
plt.show()

test_acc = svc_model.score(test_x, test_y)
print('test set accuracy:', test_acc)
------------------

----- stdout -----
{1.0, -1.0}
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[15], line 42[0m
[1;32m     39[0m plt[38;5;241m.[39mgca()[38;5;241m.[39mset_xticklabels([[38;5;124m'[39m[38;5;124mDirect[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mIndirect[39m[38;5;124m'[39m])
[1;32m     40[0m plt[38;5;241m.[39mshow()
[0;32m---> 42[0m test_acc [38;5;241m=[39m [43msvc_model[49m[38;5;241m.[39mscore(test_x, test_y)
[1;32m     43[0m [38;5;28mprint[39m([38;5;124m'[39m[38;5;124mtest set accuracy:[39m[38;5;124m'[39m, test_acc)

[0;31mNameError[0m: name 'svc_model' is not defined

