Traceback (most recent call last):
  File "/media/colin/Shared/colin/git/materials-ml-workshop/env/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/media/colin/Shared/colin/git/materials-ml-workshop/env/lib/python3.10/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/media/colin/Shared/colin/git/materials-ml-workshop/env/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
  File "/usr/lib/python3.10/asyncio/base_events.py", line 646, in run_until_complete
    return future.result()
  File "/media/colin/Shared/colin/git/materials-ml-workshop/env/lib/python3.10/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/media/colin/Shared/colin/git/materials-ml-workshop/env/lib/python3.10/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/media/colin/Shared/colin/git/materials-ml-workshop/env/lib/python3.10/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
class InorganicMaterial:
    """ 
    This class represents an Inorganic Material with a crystalline structure.

    Instance variables:
        atoms: a dictionary of element-count pairs, representing the unit cell
        crystal_system: a string representing the materials crystal system
        lattice_constants: a tuple of floats representing the unit cell lattice constants
    """

    def __init__(self, atoms={}, crystal_system='cubic', lattice_constants=()):
        """ Constructor for an Inorganic material """
                
        self.atoms = atoms
        self.crystal_system = crystal_system
        self.lattice_constants = lattice_constants

    def add_atoms(self, element, n=1):
        """ adds an element with count n to the unit cell """

        # increase the count of the element (add it, if it is not in atoms):
        if element in self.atoms:
            self.atoms[element] += n
        else:
            self.atoms[element] = n

    def remove_atoms(self, element, n=1):
        """ removes n counts of an element in the unit cell """

        # decrement the count of the element:
        if element in self.atoms:
            self.atoms[element] -= n
            
            # remove element if it causes the count to be non-positive:
            if self.atoms[element] <= 0:
                self.atoms.pop(element)

    def total_atoms(self):
        """ returns the total number of atoms in the unit cell """
        return sum(self.atoms.values())

    def get_formula(self):
        """ returns the unit cell formula in string form """

        # determine the order of elements in the formula:
        ordered_elements = sorted([ 
            elem for elem in self.atoms.keys() if elem != 'O' 
        ])
        if 'O' in self.atoms:
            ordered_elements.append('O')
    
        # construct formula
        formula = ''
        for element in ordered_elements:
            
            # only include elements with n > 0 in the formula:
            n = self.atom[element]
            if n > 0:
                formula += (element + (str(n) if n > 1 else ''))
        
        return formula

# construct an inorganic material instance:
material = InorganicMaterial(atoms={'Y':1, 'Ba':2, 'Cu':3, 'O':7 },
                             crystal_system='tetragonal',
                             lattice_constants=(3.89, 3.89, 12.12))

# print formula and total atoms:
print(material.get_formula())
print('Total atoms:', material.total_atoms())

# add and remove some atoms:
material.add_atoms('Hg')
material.add_atoms('Ca',2)
material.add_atoms('O')
material.remove_atoms('Y')

# print new formula and total atoms:
print(material.get_formula())
print('Total atoms:', material.total_atoms())
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mAttributeError[0m                            Traceback (most recent call last)
Cell [0;32mIn[7], line 69[0m
[1;32m     64[0m material [38;5;241m=[39m InorganicMaterial(atoms[38;5;241m=[39m{[38;5;124m'[39m[38;5;124mY[39m[38;5;124m'[39m:[38;5;241m1[39m, [38;5;124m'[39m[38;5;124mBa[39m[38;5;124m'[39m:[38;5;241m2[39m, [38;5;124m'[39m[38;5;124mCu[39m[38;5;124m'[39m:[38;5;241m3[39m, [38;5;124m'[39m[38;5;124mO[39m[38;5;124m'[39m:[38;5;241m7[39m },
[1;32m     65[0m                              crystal_system[38;5;241m=[39m[38;5;124m'[39m[38;5;124mtetragonal[39m[38;5;124m'[39m,
[1;32m     66[0m                              lattice_constants[38;5;241m=[39m([38;5;241m3.89[39m, [38;5;241m3.89[39m, [38;5;241m12.12[39m))
[1;32m     68[0m [38;5;66;03m# print formula and total atoms:[39;00m
[0;32m---> 69[0m [38;5;28mprint[39m([43mmaterial[49m[38;5;241;43m.[39;49m[43mget_formula[49m[43m([49m[43m)[49m)
[1;32m     70[0m [38;5;28mprint[39m([38;5;124m'[39m[38;5;124mTotal atoms:[39m[38;5;124m'[39m, material[38;5;241m.[39mtotal_atoms())
[1;32m     72[0m [38;5;66;03m# add and remove some atoms:[39;00m

Cell [0;32mIn[7], line 57[0m, in [0;36mInorganicMaterial.get_formula[0;34m(self)[0m
[1;32m     53[0m formula [38;5;241m=[39m [38;5;124m'[39m[38;5;124m'[39m
[1;32m     54[0m [38;5;28;01mfor[39;00m element [38;5;129;01min[39;00m ordered_elements:
[1;32m     55[0m     
[1;32m     56[0m     [38;5;66;03m# only include elements with n > 0 in the formula:[39;00m
[0;32m---> 57[0m     n [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43matom[49m[element]
[1;32m     58[0m     [38;5;28;01mif[39;00m n [38;5;241m>[39m [38;5;241m0[39m:
[1;32m     59[0m         formula [38;5;241m+[39m[38;5;241m=[39m (element [38;5;241m+[39m ([38;5;28mstr[39m(n) [38;5;28;01mif[39;00m n [38;5;241m>[39m [38;5;241m1[39m [38;5;28;01melse[39;00m [38;5;124m'[39m[38;5;124m'[39m))

[0;31mAttributeError[0m: 'InorganicMaterial' object has no attribute 'atom'

